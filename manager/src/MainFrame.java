
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 2 січ 2012, 9:40:50
 */
/**
 *
 * @author errorist
 */
public class MainFrame extends javax.swing.JFrame
{
	private Connection connection;
	private DefaultListModel taskListModel;
	private DefaultTableModel testListModel;

	/** Creates new form MainFrame */
	public MainFrame()
	{
		initComponents();
	}

	public MainFrame(Connection conn)
	{
		this.taskListModel = new DefaultListModel();
		this.taskListModel.clear();

		initComponents();

		this.connection = conn;
		this.testListModel = (DefaultTableModel) this.jTable1.getModel();

		this.refreshTaskList();
	}

	private void handleException(Exception e)
	{
		JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
		e.printStackTrace();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("mooCoder Task Manager");

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jList1.setModel(this.taskListModel);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("Select task to edit");
        jList1.setName("jList1"); // NOI18N
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Add");
        jButton1.setToolTipText("Add a new, blank task");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remove");
        jButton2.setToolTipText("Remove selected task");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tasks:");
        jLabel1.setName("jLabel1"); // NOI18N

        jTextField1.setEditable(false);
        jTextField1.setToolTipText("Choose a title for this task. NOTE: no HTML is allowed!");
        jTextField1.setName("jTextField1"); // NOI18N

        jLabel2.setText("Title:");
        jLabel2.setToolTipText("");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("Description:");
        jLabel3.setToolTipText("");
        jLabel3.setName("jLabel3"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("Choose a description for this task. NOTE: this field allows HTML");
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane2.setViewportView(jTextArea1);

        jLabel4.setText("Points per test:");
        jLabel4.setName("jLabel4"); // NOI18N

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner1.setToolTipText("This one defines how much points could user get solving it correctly");
        jSpinner1.setName("jSpinner1"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "#", "Input", "Correct Output", "Time limit (ms)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setToolTipText("This table contains tests assigned to this task. You can simply edit the values within the cells. Note to press \"Save\" when you are done editing the task or its tests. NOTE: changes made in this control will NOT be stored in the DB");
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane3.setViewportView(jTable1);

        jLabel5.setText("Tests:");
        jLabel5.setName("jLabel5"); // NOI18N

        jButton3.setText("Edit");
        jButton3.setToolTipText("Edit the selected task.");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Add");
        jButton4.setToolTipText("Add a new test case for the selected task");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Remove");
        jButton5.setToolTipText("Remove the selected test case");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Edit");
        jButton6.setToolTipText("Edit the selected test case");
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
	{//GEN-HEADEREND:event_jButton1ActionPerformed
		(new NewTaskFrame(this, this.connection, 0, "", "", 0)).setVisible(true);
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_jList1ValueChanged
	{//GEN-HEADEREND:event_jList1ValueChanged
		this.refreshTestList();
	}//GEN-LAST:event_jList1ValueChanged

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
	{//GEN-HEADEREND:event_jButton2ActionPerformed
		if (this.jList1.getSelectedIndex() > -1)
		{
			if (JOptionPane.showConfirmDialog(null, "Are you really sure you want to DELETE the selected task?", "DELETE Task Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
			{
				try
				{
					PreparedStatement statement = this.connection.prepareStatement("DELETE FROM tasks WHERE title = ?");
					
					statement.setString(1, (String) this.taskListModel.get(this.jList1.getSelectedIndex()));

					statement.executeUpdate();
				} catch (Exception e)
				{
					this.handleException(e);
					return;
				}
			}
		}

		this.refreshTaskList();
	}//GEN-LAST:event_jButton2ActionPerformed

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton5ActionPerformed
	{//GEN-HEADEREND:event_jButton5ActionPerformed
		if (this.jList1.getSelectedIndex() > -1 && this.jTable1.getSelectedRow() > -1)
		{
			if (JOptionPane.showConfirmDialog(null, "Are you really sure you want to DELETE the selected test?", "DELETE Test Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
			{
				try
				{
					PreparedStatement statement = this.connection.prepareStatement("DELETE FROM tests WHERE task_id = (SELECT id FROM tasks WHERE title = ?) AND id = ?");

					statement.setString(1, (String) this.taskListModel.get(this.jList1.getSelectedIndex()));
					statement.setInt(2, (Integer) this.testListModel.getValueAt(this.jTable1.getSelectedRow(), 0));

					statement.executeUpdate();
				} catch (Exception e)
				{
					this.handleException(e);
					return;
				}
			}
		}

		this.refreshTestList();
	}//GEN-LAST:event_jButton5ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
	{//GEN-HEADEREND:event_jButton3ActionPerformed
		if (this.jList1.getSelectedIndex() > -1)
		{
			int task_id = 0;

			try
			{
				PreparedStatement statement = this.connection.prepareStatement("SELECT id FROM tasks WHERE title = ?");

				statement.setString(1, (String) this.taskListModel.get(this.jList1.getSelectedIndex()));

				ResultSet results = statement.executeQuery();

				while (results.next())
				{
					task_id = results.getInt("id");
				}
			} catch (Exception e)
			{
				this.handleException(e);
				return;
			}

			(new NewTaskFrame(this, this.connection, task_id, this.jTextField1.getText(), this.jTextArea1.getText(), (Integer) this.jSpinner1.getValue())).setVisible(true);
		}
	}//GEN-LAST:event_jButton3ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
	{//GEN-HEADEREND:event_jButton4ActionPerformed
		if (this.jList1.getSelectedIndex() > -1)
		{
			int task_id = 0;

			try
			{
				PreparedStatement statement = this.connection.prepareStatement("SELECT id FROM tasks WHERE title = ?");

				statement.setString(1, (String) this.taskListModel.get(this.jList1.getSelectedIndex()));

				ResultSet results = statement.executeQuery();

				while (results.next())
				{
					task_id = results.getInt("id");
				}
			} catch (Exception e)
			{
				this.handleException(e);
				return;
			}

			(new NewTestFrame(this, this.connection, task_id, 0, "", "", 1000)).setVisible(true);
		}
	}//GEN-LAST:event_jButton4ActionPerformed

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton6ActionPerformed
	{//GEN-HEADEREND:event_jButton6ActionPerformed
		if (this.jList1.getSelectedIndex() > -1)
		{
			Integer task_id = 0, test_id = 0, timeout = 1000;
			String input = "", output = "";

			try
			{
				PreparedStatement statement = this.connection.prepareStatement("SELECT id FROM tasks WHERE title = ?");

				statement.setString(1, (String) this.taskListModel.get(this.jList1.getSelectedIndex()));

				ResultSet results = statement.executeQuery();

				while (results.next())
				{
					task_id = results.getInt("id");
				}

				test_id = (Integer) this.testListModel.getValueAt(this.jTable1.getSelectedRow(), 0);
				input = (String) this.testListModel.getValueAt(this.jTable1.getSelectedRow(), 1);
				output = (String) this.testListModel.getValueAt(this.jTable1.getSelectedRow(), 2);
				timeout = (Integer) this.testListModel.getValueAt(this.jTable1.getSelectedRow(), 3);
			} catch (Exception e)
			{
				this.handleException(e);
				return;
			}

			(new NewTestFrame(this, this.connection, task_id, test_id, input, output, timeout)).setVisible(true);
		}
	}//GEN-LAST:event_jButton6ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new MainFrame().setVisible(true);
			}
		});
	}

	final public void refreshTaskList()
	{
		try
		{
			this.taskListModel.clear();

			while (this.testListModel.getRowCount() > 0)
				this.testListModel.removeRow(0);

			Statement statement = this.connection.createStatement();

			ResultSet resultSet = statement.executeQuery("SELECT * FROM tasks");

			while (resultSet.next())
			{
				String title = resultSet.getString("title");

				this.taskListModel.add(this.taskListModel.getSize(), title);
			}
		} catch (Exception e)
		{
			this.handleException(e);
		}
	}

	final public void refreshTestList()
	{
		try
		{
			if (this.jList1.getSelectedIndex() > -1)
			{
				PreparedStatement statement = this.connection.prepareStatement("SELECT * FROM tasks WHERE title = ?");

				statement.setString(1, (String) this.taskListModel.get(this.jList1.getSelectedIndex()));

				ResultSet tasks_results = statement.executeQuery();

				while (tasks_results.next())
				{
					this.jTextField1.setText(tasks_results.getString("title"));
					this.jTextArea1.setText(tasks_results.getString("description"));
					this.jSpinner1.setValue(tasks_results.getInt("points_per_test"));

					PreparedStatement tests_statement = this.connection.prepareStatement("SELECT * FROM tests WHERE task_id = ?");
					tests_statement.setInt(1, tasks_results.getInt("id"));
					ResultSet tests_results = tests_statement.executeQuery();

					while (this.testListModel.getRowCount() > 0)
						this.testListModel.removeRow(0);

					while (tests_results.next())
					{
						//this.taskListModel.setSize(this.taskListModel.getSize() + 1);

						this.testListModel.addRow(new Object[] {
							tests_results.getInt("id"),
							tests_results.getString("input"),
							tests_results.getString("output"),
							tests_results.getInt("timeout")
						});
					}
				}
			} else
			{
				this.jTextField1.setText("");
				this.jTextArea1.setText("");
				this.jSpinner1.setValue(0);

				while (this.testListModel.getRowCount() > 0)
					this.testListModel.removeRow(0);
			}
		} catch (Exception e)
		{
			this.handleException(e);
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
